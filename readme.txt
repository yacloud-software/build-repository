BuildRepo
==========

The Build repository is a tool we have developed to track the binary artefacts from the various build systems we have.
The Build repository - on purpose - is free from external dependencies. This means it does not depend on databases or other services.

We call an artefact any binary which is generated by some code or tool. Examples are:
* Binaries generated by “go build”
* Drivers generated by “gcc -o driver driver.c” (or make :) )

The artefacts are generated by our build server which assigns a unique number to each build.
This number, together with the artefact itself, is submitted to the build repository after each successful build.

The Build repository keeps each artefact and the version on disk for future usage. By default, it maintains it under /srv/build-repository.
This directory must exist and be writable by the server.

Example usages are:
* Deploy new versions to production
* Rollback to earlier versions
* Compare behavior of different versions
* Get latest version available from a given artefact

The artefacts are grouped by “repository” and by “branch” on disk.
A symlink is automatically maintained to point to the “latest” build for a given build.

Assuming the server runs on localhost, build-repo-client might be invoked like so:

build-repo-client -branch=master -build=5 -repository=testrepo -commitid=foo -commitmsg=bar README.txt 

This will transfer the file “README.txt” (which must exist) to the build repository.
Note: It is also possible to specify a directory instead of a filename to upload multiple files.

Each time the build repository receives a new artefact it will call our deployment tool "deploymonkey". 






